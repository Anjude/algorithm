包的依赖分析
时间限制： 3000MS
内存限制： 589824KB
题目描述：
一般在代码Code Review或者持续集成过程中，一次代码提交会触发代码的重新编译及正在Review过程的Pull Request的Approval重置，为了加快编译或者只重置受影响的Pull Reqeust，都会进行代码包依赖分析，找出受影响的代码包(package)。我们使用正整数表示包，对给定的被修改的包，求出所有受影响的包(去重)所代表数字的和，若无受影响的包，则和返回-1。注意，直接依赖及间接依赖的包被修改，当前包均被定义为受影响。



输入描述
第一行为整数，代表被修改的包。 第二行开始的后续行都是数组，代表数组的第一个元素依赖后续的元素，注意数组元素可能只有1个，代表该包无依赖。 如输入样例的含义为被修改的包是4，包1依赖2, 包3依赖4、5、6,  包2依赖3,  包6依赖4、2, 包8依赖9，包10无依赖。

输出描述
所有受影响的包去重后为1、2、3、6，所以其和为12.


样例输入
4
1,2
3,4,5,6
2,3
6,4,2
8,9
10
样例输出
12

提示
依赖关系中可能有环，也可能有部分包与其它包之间没有依赖关系。另外，不用考虑求和时整数溢出。

建房问题
时间限制： 3000MS
内存限制： 589824KB
题目描述：
假设在一条无限长的道路上盖房子，第一个月在某个点盖一个红房子，之后每个月，都会在上一次盖的新房子的左边盖一个绿房子，右边盖一个红房子。（假设两个房子之间的空间无限大，可以一直在中间盖房子）
用字符'R'表示红房子，用字符'G'表示绿房子。
输入一个n(1≤n≤12)，表示过了n个月，打印出当前道路上房子从左到右的排列。
要求：
1.    当输入非数字,输出：N
2.    当输入数字超出限制时，输出O
样例：
输入1
输出 R
输入2
输出 GRR
输入3
输出 GGRRGRR
输入5
输出 GGRGGRRGGGRRGRRRGGRGGRRRGGRRGRR



输入描述
输入值

输出描述
1.    当输入非数字,输出：N

2.    当输入数字超出限制时，输出O

3.     符合条件时输出当前道路上房子从左到右的排列


样例输入
5
样例输出
GGRGGRRGGGRRGRRRGGRGGRRRGGRRGRR